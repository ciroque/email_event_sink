use Mix.Config

# For production, don't forget to configure the url host
# to something meaningful, Phoenix uses this information
# when generating URLs.
#
# Note we also include the path to a cache manifest
# containing the digested version of static files. This
# manifest is generated by the `mix phx.digest` task,
# which you should run after static files are built and
# before starting your production server.
config :email_event_sink, EmailEventSinkWeb.Endpoint,
       on_init: {EmailEventSinkWeb.Endpoint, :load_from_system_env, []},
       http: [port: {:system, "PORT"}, ip: {0, 0, 0, 0}],
       server: true

# Do not print debug messages in production
config :logger,
  level: :info,
  backends: [:console, {Logger.Backends.Gelf, :gelf_logger}],
  utc_log: true

config :logger, :console,
       format: "$time $metadata[$level] $message\n",
       metadata: [:request_id]

config :logger, :gelf_logger,
       host: "graylog.stag.ciroque-enterprises.net",
       port: 12201,
       application: "EmailEVentSink",
       json_encoder: Jason,
       compression: :gzip, # Defaults to :gzip, also accepts :zlib or :raw
       metadata: [:request_id, :function, :module, :file, :line]

# ## SSL Support
#
# To get SSL working, you will need to add the `https` key
# to the previous section and set your `:url` port to 443:
#
#     config :email_event_sink, EmailEventSinkWeb.Endpoint,
#       ...
#       url: [host: "example.com", port: 443],
#       https: [
#         :inet6,
#         port: 443,
#         cipher_suite: :strong,
#         keyfile: System.get_env("SOME_APP_SSL_KEY_PATH"),
#         certfile: System.get_env("SOME_APP_SSL_CERT_PATH")
#       ]
#
# The `cipher_suite` is set to `:strong` to support only the
# latest and more secure SSL ciphers. This means old browsers
# and clients may not be supported. You can set it to
# `:compatible` for wider support.
#
# `:keyfile` and `:certfile` expect an absolute path to the key
# and cert in disk or a relative path inside priv, for example
# "priv/ssl/server.key". For all supported SSL configuration
# options, see https://hexdocs.pm/plug/Plug.SSL.html#configure/1
#
# We also recommend setting `force_ssl` in your endpoint, ensuring
# no data is ever sent via http, always redirecting to https:
#
#     config :email_event_sink, EmailEventSinkWeb.Endpoint,
#       force_ssl: [hsts: true]
#
# Check `Plug.SSL` for all available options in `force_ssl`.

# ## Using releases (distillery)
#
# If you are doing OTP releases, you need to instruct Phoenix
# to start the server for all endpoints:
#
#     config :phoenix, :serve_endpoints, true
#
# Alternatively, you can configure exactly which server to
# start per endpoint:
#
#     config :email_event_sink, EmailEventSinkWeb.Endpoint, server: true
#
# Note you can't rely on `System.get_env/1` when using releases.
# See the releases documentation accordingly.

# Finally import the config/prod.secret.exs which should be versioned
# separately.
#import_config "prod.secret.exs"

config :email_event_sink, EmailEventSinkWeb.Endpoint,
       secret_key_base: "8jOeyXYSJ7ftftgX8ZqJjJBmhpD3OztpuXnNIFubrRuI1FzEgHd+PYeNVb/2/vnj"

# Configure your database
config :email_event_sink, EmailEventSink.Repo,
       username: "${DBUN}" || "must-be-set",
       password: "${DBPW}" || "must-be-set",
       database: "${DBNM}" || "email_event_sink",
       hostname: "${DBHN}" || "database-host",
       pool_size: 15,
       queue_target: 2000,
       queue_interval: 100
